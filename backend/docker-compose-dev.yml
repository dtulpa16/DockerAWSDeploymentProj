version: '3.9'

services:
  youtubeclone_backend:
  #Our Django API service
    container_name: youtubeclone_backend
    image: dtulpa16/youtubeclone-dev

    depends_on:
      db:
        condition: service_healthy
    #Will not start until "db" is healthy
    #This will allow us to verify MySQL is ready before trying to migrate
    ports:
      - "80:8000"
    #This will allow us to access our app with port 8001, internal port 8000
    command: sh ./entrypoint.sh
    #This will run the entrypoint.sh script to start our API

  db:
  #Our MySQL service, which matches the "HOST" value from our database configuration
    container_name: db
    image: mysql
  #This will use a MySQL image
    environment:
      MYSQL_DATABASE: 'youtube_clone'
      MYSQL_ROOT_PASSWORD: 'password_123'
  #Configures our MySQL database with the DB name & password from our database configuration
    command: --default-authentication-plugin=mysql_native_password
    #This will allow us to use the mysql_native_password authentication plugin
    volumes:
      - production_db_volume:/var/lib/mysql
    #Connecting our MySQL database to an external volume
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  #Our heath check, that will ping our db repeatedly until the service is up & running
volumes:
  production_db_volume:
  #This will create an external volume for our MySQL database